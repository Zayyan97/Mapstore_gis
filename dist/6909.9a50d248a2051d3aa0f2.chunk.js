(self.webpackChunkMyMapStoreProject=self.webpackChunkMyMapStoreProject||[]).push([[6909],{6909:(e,t,r)=>{"use strict";r.d(t,{Z:()=>ue});var o=r(24852),s=r.n(o),i=r(57043),a=r.n(i),n=r(91175),l=r.n(n),c=r(13311),p=r.n(c),d=r(12571),h=r.n(d),u=r(57557),g=r.n(u),y=r(1469),m=r.n(y),w=r(10928),f=r.n(w),C=r(63105),G=r.n(C),S=r(14293),P=r.n(S),F=r(84596),I=r.n(F),T=r(45697),x=r.n(T),M=r(27418),b=r.n(M),k=r(55877),E=r.n(k),v=r(9669),L=r.n(v),j=r(52259),O=r(90183),Z=r(66287),D=r(64250),A=r(58767),W=r(93546),N=r(69141),R=r(23068),J=r(97016),V=r(29902),q=r(72445),B=r(52329),H=r(40353),X=r(52043),z=r(44538),K=r(25642),U=r(13987),$=r(69669),_=r(98090),Q=r(31219),Y=r(98185),ee=r(20767),te=r(15565),re=r(9371),oe=r(78426),se=r(36403),ie=r(18369),ae=r(29194),ne=r(1577),le=r(51273),ce=r(56834),pe=r(21915);function de(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=typeof o)return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const he=new N.Z;class ue extends s().Component{constructor(){var e;super(...arguments),e=this,de(this,"getNewFeature",((e,t,r,o)=>new R.Z({geometry:this.createOLGeometry({type:e,coordinates:t,radius:r,center:o})}))),de(this,"getMapCrs",(()=>this.props.map.getView().getProjection().getCode())),de(this,"updateFeatureStyles",(e=>{e&&e.length>0&&e.forEach((e=>{if(e.style){let t=this.toOlFeature(e);t&&t.setStyle(e.style?(0,W.C2)(e):this.toOlStyle(e.style,e.selected))}}))})),de(this,"updateOnlyFeatureStyles",(e=>{this.drawLayer&&this.drawLayer.getSource().getFeatures().forEach((t=>{let r=l()(e.features).features||e.features,o=p()(r,(e=>e.properties.id===t.getProperties().id));if(o){let e=(0,Z.createStylesAsync)(I()(o.style));L().all(e).then((e=>{t.setStyle((()=>(0,W.Cw)({...o,style:e})))}))}}))})),de(this,"addLayer",((e,t)=>{let r=null;const o=this.convertGeometryTypeToStyleType(e.drawMethod);r=t=>{let r=l()(e.features)&&p()(l()(e.features).features,(e=>e.properties.id===t.getProperties().id))||null;if(r){let e=(0,Z.createStylesAsync)(I()(r.style));return L().all(e).then((e=>{t.setStyle((()=>(0,W.Cw)({...r,style:e})))})),null}return(0,W.Cw)({style:W.jF[o]})},this.geojson=new N.Z,this.drawSource=new J.Z,this.drawLayer=new V.Z({source:this.drawSource,zIndex:1e8,style:r}),this.props.map.addLayer(this.drawLayer),t&&this.addInteractions(e);let s=l()(e.features);if(s&&s.features&&s.features.length){const t=s.features.filter((t=>!t.properties.isCircle||t.properties.isCircle&&!t.properties.canEdit||!e.options.drawEnabled));return this.addFeatures(b()({},e,{features:[{...s,features:t}]}))}return this.addFeatures(e)})),de(this,"addFeatures",(e=>{let{features:t,drawMethod:r,options:o}=e;const s=this.getMapCrs();let i;if(t.forEach((e=>{if("FeatureCollection"===e.type){let t=(new N.Z).readFeatures(e);o.geodesic||(t=t.map((e=>(0,D.a)(e,s)))),this.drawSource=new J.Z({features:t}),this.drawLayer.setSource(this.drawSource)}else{let t=null,a=e;a.geometry&&"GeometryCollection"!==a.geometry.type&&(a=(0,O.reprojectGeoJson)(a,a.featureProjection,s).geometry),"GeometryCollection"!==a.type&&("Circle"===r&&a&&(a.properties&&a.properties.center||a.center)?(t=a.properties&&a.properties.center?(0,O.reproject)(a.properties.center,"EPSG:4326",s):a.center,t=[t.x,t.y],i=new R.Z({geometry:this.createOLGeometry({type:"Circle",center:t,projection:"EPSG:3857",radius:a.properties&&a.properties.radius||a.radius,options:o})})):i=new R.Z({geometry:this.createOLGeometry(a.geometry?a.geometry:{...a,radius:a.properties?.radius,center:t})}),i.setProperties(e.properties),this.drawSource.addFeature(i))}})),0===t.length&&(o.editEnabled||o.drawEnabled))o.transformToFeatureCollection?(this.drawSource=new J.Z({features:(new N.Z).readFeatures({type:"FeatureCollection",features:[]})}),this.drawLayer.setSource(this.drawSource)):(i=new R.Z({geometry:this.createOLGeometry({type:r,coordinates:null})}),this.drawSource.addFeature(i));else{if(t[0]&&"GeometryCollection"===t[0].type){this.drawSource=new J.Z({features:(new N.Z).readFeatures(t[0])});let e=this.replacePolygonsWithCircles(this.drawSource.getFeatures()[0]);this.drawSource.getFeatures()[0].getGeometry().setGeometries(e),this.drawLayer.setSource(this.drawSource)}t[0]&&t[0].geometry&&"GeometryCollection"===t[0].geometry.type&&(i=(0,O.reprojectGeoJson)(t[0],o.featureProjection,s).geometry,this.drawSource=new J.Z({features:(new N.Z).readFeatures(i)}),this.drawSource.getFeatures()[0].set("textGeometriesIndexes",t[0].properties&&t[0].properties.textGeometriesIndexes),this.drawSource.getFeatures()[0].set("textValues",t[0].properties&&t[0].properties.textValues),this.drawSource.getFeatures()[0].set("circles",t[0].properties&&t[0].properties.circles),this.drawLayer.setSource(this.drawSource))}return this.updateFeatureStyles(t),i})),de(this,"replaceFeatures",(e=>{let t;return this.drawLayer?(this.drawSource.clear(),t=this.addFeatures(e),e.style&&this.drawLayer.setStyle((t=>{let r=p()(l()(e.features).features,(e=>e.properties.id===t.getProperties().id));if(r){let e=(0,Z.createStylesAsync)(I()(r.style));return L().all(e).then((e=>{t.setStyle((()=>(0,W.Cw)({...r,style:e})))})),null}const o=this.convertGeometryTypeToStyleType(e.drawMethod);return(0,W.Cw)({style:W.jF[o]})}))):t=this.addLayer(e,e.options&&e.options.drawEnabled||!1),t})),de(this,"endDrawing",(e=>{const t=this.replaceFeatures(e);if(t){const r=this.fromOLFeature(t);"Circle"===e.drawMethod&&e&&e.features&&e.features.length&&e.features[0]&&e.features[0].radius>=0&&(r.radius=e.features[0].radius),this.props.onEndDrawing(r,e.drawOwner)}})),de(this,"addDrawInteraction",((e,t,r,o)=>{this.drawInteraction&&this.removeDrawInteraction(),this.drawInteraction=new q.ZP(this.drawPropertiesForGeometryType(e,r,this.drawSource,o)),this.props.map.disableEventListener("singleclick"),this.drawInteraction.on("drawstart",(()=>{this.selectInteraction&&(this.selectInteraction.getFeatures().clear(),this.selectInteraction.setActive(!1))})),this.drawInteraction.on("drawend",(e=>{const r=e.feature.clone();if(r.set("id",E().v1()),"Circle"===this.props.drawMethod&&"Circle"===r.getGeometry().getType()){const e=r.getGeometry().getRadius(),t=r.getGeometry().getCenter();r.setGeometry(this.polygonFromCircle(t,e))}const o=this.fromOLFeature(r,t);this.props.onEndDrawing(o,this.props.drawOwner),this.props.options.stopAfterDrawing&&this.props.onChangeDrawingStatus("stop",this.props.drawMethod,this.props.drawOwner,this.props.features.concat([o])),this.selectInteraction&&(this.addSelectInteraction(),this.selectInteraction.setActive(!0))})),this.props.map.addInteraction(this.drawInteraction),this.setDoubleClickZoomEnabled(!1)})),de(this,"toMulti",(e=>"Point"===e.getType()?new B.Z([e.getCoordinates()]):e)),de(this,"handleDrawAndEdit",((e,t,r,o)=>{this.drawInteraction&&this.removeDrawInteraction(),this.drawInteraction=new q.ZP(this.drawPropertiesForGeometryType((0,j.getSimpleGeomType)(e),r,(0,j.isSimpleGeomType)(e)?this.drawSource:null,o)),this.props.map.disableEventListener("singleclick"),this.drawInteraction.on("drawstart",(()=>{this.selectInteraction&&(this.selectInteraction.getFeatures().clear(),this.selectInteraction.setActive(!1))})),this.drawInteraction.on("drawend",(r=>{const s=r.feature.clone(),i=E().v1();s.set("id",i);let a,n,c,d=s.getGeometry(),h=this.drawLayer.getSource().getFeatures(),u=this.props.features;if(this.props.options.transformToFeatureCollection){let t;if("Circle"===e){let e,s,a;if(c="Polygon",this.props.options.geodesic){s=r.feature.getGeometry().geodesicCenter||(0,pe.qg)(d.getExtent());const t=this.props.map.getView().getProjection().getCode(),o=[[...s],[...d.getCoordinates()[0][0]]].map((e=>this.reprojectCoordinatesToWGS84(e,t)));e=(0,O.calculateDistance)(o,"haversine"),a=(0,H.iu)(o[0],e).clone().transform("EPSG:4326",t).getCoordinates()}else e=d.getRadius(),s=d.getCenter(),a=this.polygonCoordsFromCircle(s,e);t=this.getNewFeature(c,a),s=(0,O.reproject)(s,this.getMapCrs(),"EPSG:4326",!1);const n=o&&o.features&&o.features.length&&o.features[0]&&o.features[0].features&&o.features[0].features.length&&o.features[0].features.filter((e=>e.properties.isDrawing))[0].properties.id||i;t.setProperties({isCircle:!0,radius:e,center:[s.x,s.y],id:n,crs:this.getMapCrs(),isGeodesic:this.props.options.geodesic})}else if("Polygon"===e){c=this.props.drawMethod;let e=d.getCoordinates();e[0].push(e[0][0]),t=this.getNewFeature(c,e)}else{c="Text"===e?"Point":this.props.drawMethod;let r=d.getCoordinates();t=this.getNewFeature(c,r),"Text"===e&&t.setProperties({isText:!0,valueText:"."})}const s=h.length>=1?[...this.replaceCirclesWithPolygonsInFeatureColl(h)]:[];t.getProperties().id||t.setProperties({id:E().v1()});const a=[...s,t];let n=he.writeFeaturesObject(a);const l=new J.Z({features:(new N.Z).readFeatures(n)});this.drawLayer.setSource(l);let p=(0,O.reprojectGeoJson)(n,this.getMapCrs(),"EPSG:4326");this.props.onGeometryChanged([p],this.props.drawOwner,this.props.options&&this.props.options.stopAfterDrawing?"enterEditMode":"","Text"===e,"Circle"===e),this.props.onEndDrawing(p,this.props.drawOwner),this.props.onDrawingFeatures([f()(p.features)])}else{if("Circle"===e){c="Polygon";const e=d.getRadius(),t=d.getCenter(),r=this.polygonCoordsFromCircle(t,e),o=this.toMulti(this.createOLGeometry({type:c,coordinates:r}));if(1===u.length&&u[0]&&!u[0].geometry)a=[],n=new _.default([o]);else if(a=this.toMulti(l()(h).getGeometry()),a.getGeometries){const e=this.replaceCirclesWithPolygons(l()(h));n=new _.default([...e,o])}else n=new _.default([a,o]);s.setGeometry(n)}else if("Text"===e||"MultiPoint"===e){let e=d.getCoordinates();c="MultiPoint";let t=this.toMulti(this.createOLGeometry({type:c,coordinates:[e]}));if(1!==u.length||u[0].geometry)if(a=this.toMulti(l()(h).getGeometry()),a.getGeometries){let e=this.replaceCirclesWithPolygons(l()(h));n=new _.default([...e,t])}else n=a.clone(),n.appendPoint(t.getPoint(0));else a=[],n=t.clone();s.setGeometry(n)}else if(!(0,j.isSimpleGeomType)(e)){let t;n=null,a=1!==u.length||u[0].geometry?this.toMulti(l()(h).getGeometry()):this.toMulti(this.createOLGeometry({type:e,coordinates:null}));let r=h.map((e=>"GeometryCollection"===e.getGeometry().getType()?e.getGeometry().getGeometries():e.getGeometry()));"GeometryCollection"===h[0].getGeometry().getType()&&(r=r[0]);let o=p()(r,(t=>t.getType()===e));if(o?this.appendToMultiGeometry(e,o,d):t=this.toMulti(this.createOLGeometry({type:e,coordinates:d.getCoordinates()})),d.getType()!==(0,j.getSimpleGeomType)(a.getType())){let r=l()(h).getGeometry().getGeometries?this.replaceCirclesWithPolygons(l()(h)):[];if(o){let e=r.map((e=>e.getType()===o.getType()?o:e));n=new _.default(e)}else n="GeometryCollection"===a.getType()?new _.default([...r,t]):"Text"===e?new _.default([t]):new _.default([a,t]);s.setGeometry(n)}else s.setGeometry(o)}let r=this.props.features[0].properties;"Text"===e&&(r=b()({},this.props.features[0].properties,{textValues:(this.props.features[0].properties.textValues||[]).concat(["."]),textGeometriesIndexes:(this.props.features[0].properties.textGeometriesIndexes||[]).concat([s.getGeometry().getGeometries().length-1])})),"Circle"===e&&(r=b()({},r,{circles:(this.props.features[0].properties.circles||[]).concat([s.getGeometry().getGeometries().length-1])}));let o=this.fromOLFeature(s,t,r);const i=new J.Z({features:(new N.Z).readFeatures(o)});this.drawLayer.setSource(i);let g=(0,O.reprojectGeoJson)(he.writeFeatureObject(s.clone()),this.getMapCrs(),"EPSG:4326");"Polygon"===g.geometry.type&&g.geometry.coordinates[0].push(g.geometry.coordinates[0][0]),this.props.onGeometryChanged([g],this.props.drawOwner,this.props.options&&this.props.options.stopAfterDrawing?"enterEditMode":"","Text"===e,"Circle"===e),this.props.onEndDrawing(o,this.props.drawOwner),o=(0,O.reprojectGeoJson)(o,this.getMapCrs(),"EPSG:4326");const y=(0,j.isSimpleGeomType)(this.props.drawMethod)&&"GeometryCollection"!==this.props.features[0].geometry.type?this.props.features.map((e=>({...e,featureProjection:this.getMapCrs()}))).concat([{...o,type:"Feature",geometry:{type:o.type,coordinates:o.coordinates},featureProjection:this.getMapCrs(),properties:r}]):[{...o,properties:r}];this.props.options.stopAfterDrawing?this.props.onChangeDrawingStatus("stop",this.props.drawMethod,this.props.drawOwner,y):this.props.onChangeDrawingStatus("replace",this.props.drawMethod,this.props.drawOwner,y.map((e=>(0,O.reprojectGeoJson)(e,"EPSG:4326",this.getMapCrs()))),b()({},this.props.options,{featureProjection:this.getMapCrs()})),this.selectInteraction&&(this.addSelectInteraction(),this.selectInteraction.setActive(!0))}})),this.props.map.addInteraction(this.drawInteraction),this.setDoubleClickZoomEnabled(!1)})),de(this,"drawPropertiesForGeometryType",(function(t,r,o){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i={source:e.drawSource||o,type:t,style:"Marker"===t?(0,W.Fc)(s.style):new Q.default({fill:new Y.default({color:"rgba(255, 255, 255, 0.2)"}),stroke:new ee.default({color:"rgba(0, 0, 0, 0.5)",lineDash:[10,10],width:2}),image:new re.default({radius:5,stroke:new ee.default({color:"rgba(0, 0, 0, 0.7)"}),fill:new Y.default({color:"rgba(255, 255, 255, 0.2)"})})}),features:new oe.Z,condition:se.Bx},a={};switch(t){case"BBOX":a.type="LineString",a.maxPoints=2,a.geometryFunction=function(e,t){let r=t;r||(r=new H.ZP([]));let o=e[0],s=e[1];return r.setCoordinates([[o,[o[0],s[1]],s,[s[0],o[1]],o]]),r};break;case"Circle":a.maxPoints=100,s.options&&s.options.geodesic?a.geometryFunction=(t,r)=>{let o=r;o||(o=new H.ZP([]),o.setProperties({geodesicCenter:[...t[0]]},!0));let s=e.props.map.getView().getProjection().getCode(),i=[...t].map((t=>e.reprojectCoordinatesToWGS84(t,s))),a=(0,O.calculateDistance)(i,"haversine"),n=(0,H.iu)(i[0],a).clone().transform("EPSG:4326",s).getCoordinates();return o.setCoordinates(n),o}:a.type=t;break;case"Marker":case"Point":case"Text":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":{"LineString"===t&&(a.maxPoints=r);let o="Text"===t||"Marker"===t?"Point":t;a.type=o,a.geometryFunction=(t,r)=>{let i=r;return i||(i=e.createOLGeometry({type:o,coordinates:null,options:s.options})),i.setCoordinates(t),i};break}default:return{}}return b()({},i,a)})),de(this,"setDoubleClickZoomEnabled",(e=>{let t=this.props.map.getInteractions();for(let r=0;r<t.getLength();r++){let o=t.item(r);if(o instanceof ie.Z){o.setActive(e);break}}})),de(this,"updateFeatureExtent",(e=>{const t=e.features.getArray(),r=this.props.features.map((e=>{const r=l()(t.filter((t=>this.fromOLFeature(t).id===e.id)));return r?b()({},e,{geometry:r.geometry,center:r.center,extent:r.extent,coordinate:r.coordinates,radius:r.radius}):e}));this.props.onChangeDrawingStatus("replace",this.props.drawMethod,this.props.drawOwner,r)})),de(this,"addInteractions",(e=>{this.clean(),this.drawLayer||this.addLayer(e),this.addDrawInteraction(e.drawMethod,e.options.startingPoint,e.options.maxPoints,e),e.options&&e.options.editEnabled&&(this.addSelectInteraction(),this.translateInteraction&&this.props.map.removeInteraction(this.translateInteraction),this.translateInteraction=new ae.Z({features:this.selectInteraction.getFeatures()}),this.translateInteraction.setActive(!1),this.translateInteraction.on("translateend",this.updateFeatureExtent),this.props.map.addInteraction(this.translateInteraction),this.addTranslateListener(),this.modifyInteraction&&this.props.map.removeInteraction(this.modifyInteraction),this.modifyInteraction=new ne.Z({features:this.selectInteraction.getFeatures(),condition:e=>(0,se.Xp)(e)&&!(0,se.Ko)(e)}),this.props.map.addInteraction(this.modifyInteraction)),this.drawSource.clear(),e.features.length>0&&this.addFeatures(e)})),de(this,"addSingleClickListener",((e,t)=>t.map.on("singleclick",e))),de(this,"addDrawOrEditInteractions",(e=>{this.state&&this.state.keySingleClickCallback&&(0,ce.B)(this.state.keySingleClickCallback);this.clean();let t,r=e.features.map((t=>(0,O.reprojectGeoJson)(t,e.options.featureProjection,this.getMapCrs())||{}));const o=r.every((e=>!!(e&&e.features&&e.features.length))),s=r.every((e=>!!(e&&e.properties&&e.properties.isCircle)));if(o)t=b()({},e,{features:r});else if(s)t=b()({},e,{features:[]});else{const o=r.reduce(((e,t)=>t.geometry?[...e,{...t.geometry,properties:t.properties}]:e),[]);t=b()({},e,{features:o})}this.drawLayer?(this.drawSource.clear(),this.addFeatures(t)):this.addLayer(t),e.options.editEnabled&&(!e.options.geodesic&&this.addModifyInteraction(e),!1!==e.options.translateEnabled&&this.addTranslateInteraction(),e.options.addClickCallback&&this.setState({keySingleClickCallback:this.addSingleClickListener((t=>{if(this.drawSource&&e.options){let r=this.drawSource.getFeatures(),o=0;const s=r&&r.length&&r.filter(((e,t)=>(e.getProperties().canEdit&&(o=t),e.getProperties().canEdit)))[0]||null,i=s&&s.getGeometry()&&s.getGeometry().getCoordinates&&s.getGeometry().getCoordinates()||[];let a,n=[],l=e.drawMethod;switch(l){case"Polygon":i.length?(0,A.F7)(i)?(n=h()(i[0],0,i[0].length-1),n=n.concat([t.coordinate]),n=[n.concat([i[0][0]])]):n=i[0].length>1?[[...i[0],t.coordinate,i[0][0]]]:[[...i[0],t.coordinate]]:n=[[t.coordinate]],a=this.getNewFeature(l,n),a.setProperties(g()(s&&s.getProperties()||{},"geometry"));break;case"LineString":case"MultiPoint":n=i.length?[...i,t.coordinate]:[t.coordinate],a=this.getNewFeature(l,n),a.setProperties(g()(s&&s.getProperties()||{},"geometry"));break;case"Circle":{l="Polygon";const r=s&&s.getProperties()&&s.getProperties().radius||1e4;let o=t.coordinate,i=this.polygonCoordsFromCircle(o,r);if(e.options.geodesic){const e=this.props.map.getView().getProjection().getCode(),t=[[...o]].map((t=>this.reprojectCoordinatesToWGS84(t,e)));i=(0,H.iu)(t[0],r).clone().transform("EPSG:4326",e).getCoordinates()}a=this.getNewFeature(l,i),o=(0,O.reproject)(o,this.getMapCrs(),"EPSG:4326",!1),a.setProperties(g()(s&&s.getProperties()||{},"geometry")),a.setProperties({isCircle:!0,radius:r,center:[o.x,o.y],isGeodesic:this.props.options.geodesic});break}case"Text":l="Point",a=this.getNewFeature(l,t.coordinate),a.setProperties(g()(s&&s.getProperties()||{},"geometry")),a.setProperties({isText:!0,valueText:s&&s.getProperties()&&s.getProperties().valueText||e.options.defaultTextAnnotation||"New"});break;default:n=t.coordinate,a=this.getNewFeature(l,n),a.setProperties(g()(s&&s.getProperties()||{},"geometry"))}let c={type:"Feature",geometry:{coordinates:[...(0,O.reprojectGeoJson)(he.writeFeaturesObject([a.clone()]),this.getMapCrs(),"EPSG:4326").features[0].geometry.coordinates],type:l},properties:{...g()(a.getProperties(),"geometry")}};this.props.onDrawingFeatures([c]),e.options.geodesic||(a=(0,D.a)(a,this.getMapCrs())),r[o]=a,this.drawSource=new J.Z({features:r}),this.drawLayer.setSource(this.drawSource),this.addModifyInteraction(e)}}),e)})),e.options&&e.options.selectEnabled&&this.addSelectInteraction(e.options&&e.options.selected,e),e.options.drawEnabled&&this.handleDrawAndEdit(e.drawMethod,e.options.startingPoint,e.options.maxPoints,e)})),de(this,"addSelectInteraction",((e,t)=>{let r;if(this.selectInteraction&&this.props.map.removeInteraction(this.selectInteraction),e&&(r=p()(this.drawSource.getFeatures(),(t=>t.getProperties().id===e.properties.id)),r&&this.selectFeature(r)),this.selectInteraction=new le.Z({layers:[this.drawLayer],features:new oe.Z(e&&r?[r]:null)}),r){const e=this.convertGeometryTypeToStyleType(t.drawMethod);r.setStyle((0,W.C2)({...t,style:{...t.style,type:e,highlight:!0,useSelectedStyle:t.options.useSelectedStyle}},!1,t.features[0]&&t.features[0].properties&&t.features[0].properties.valueText&&[t.features[0].properties.valueText]||[]))}this.selectInteraction.on("select",(e=>{let t=this.selectInteraction.getFeatures().getArray(),r=[];return t.length&&(r=this.props.features.map((r=>{let o=!1;if("FeatureCollection"===r.type&&t.length>0){let e=l()(t);if(this.selectFeature(e),e.getGeometry&&"Circle"===e.getGeometry().getType()){let t=e.getGeometry().getRadius(),r=(0,O.reproject)(e.getGeometry().getCenter(),this.getMapCrs(),"EPSG:4326");e.setProperties({center:[r.x,r.y],radius:t}),e=this.replaceCircleWithPolygon(e.clone())}return this.drawSource.getFeatures().forEach((t=>{t.getProperties().id===e.getProperties().id?this.selectFeature(e):this.deselectFeature(t)})),(0,O.reprojectGeoJson)(he.writeFeatureObject(e.clone()),this.getMapCrs(),"EPSG:4326")}return o=t.reduce(((e,t)=>t.get("id")===r.id||e),!1),b()({},r,{selected:o,selectedFeature:e.selected})})),this.props.onSelectFeatures(r)),0===t.length?(this.props.onSelectFeatures([]),this.drawSource.getFeatures().map((e=>this.deselectFeature(e))),null):null})),this.props.map.addInteraction(this.selectInteraction)})),de(this,"selectFeature",(e=>{e.setProperties({selected:!0})})),de(this,"deselectFeature",(e=>{e.setProperties({selected:!1})})),de(this,"removeDrawInteraction",(()=>{this.drawInteraction&&(this.props.map.removeInteraction(this.drawInteraction),this.drawInteraction=null,setTimeout((()=>this.props.map.enableEventListener("singleclick")),500),setTimeout((()=>this.setDoubleClickZoomEnabled(!0)),250))})),de(this,"removeInteractions",(()=>{this.removeDrawInteraction(),this.selectInteraction&&(this.props.map.enableEventListener("singleclick"),this.props.map.removeInteraction(this.selectInteraction)),this.modifyInteraction&&(this.props.map.removeInteraction(this.modifyInteraction),this.props.map.un("singleclick")),this.translateInteraction&&this.props.map.removeInteraction(this.translateInteraction)})),de(this,"clean",(e=>{e||this.removeInteractions(),this.drawLayer&&(this.props.map.removeLayer(this.drawLayer),this.geojson=null,this.drawLayer=null,this.drawSource=null)})),de(this,"fromOLFeature",((e,t,r)=>{const o=e.getGeometry(),s=this.props.map.getView().getProjection().getCode(),i=o.getType();if(o.getCoordinates){const r=o.getExtent(),n=o.getProperties(),l=n&&n.geodesicCenter||(0,pe.qg)(r);let c,p=o.getCoordinates();if(t&&(p=a()(t,p),o.setCoordinates(p)),"Circle"===this.props.drawMethod)if(this.props.options.geodesic){const e=[[...l],[...p[0][0]]].map((e=>this.reprojectCoordinatesToWGS84(e,s)));c=(0,O.calculateDistance)(e,"haversine")}else c=this.calculateRadius(l,p);return b()({},{id:e.get("id"),type:i,extent:r,center:l,coordinates:p,radius:c,style:this.fromOlStyle(e.getStyle()),projection:this.getMapCrs()})}let n=o.getGeometries().map(((o,i)=>{const n=o.getExtent(),l=(0,pe.qg)(n);let c,p=o.getCoordinates();if(t&&(p=a()(t,p),o.setCoordinates(p)),r.circles&&-1!==r.circles.indexOf(i))if(this.props.options.geodesic){const e=[[...l],[...p[0][0]]].map((e=>this.reprojectCoordinatesToWGS84(e,s)));c=(0,O.calculateDistance)(e,"haversine")}else c=this.calculateRadius(l,p);else c=0;return b()({},{id:e.get("id"),type:o.getType(),extent:n,center:l,coordinates:p,radius:c,style:this.fromOlStyle(e.getStyle()),projection:this.getMapCrs()})}));return b()({},{type:"Feature",id:e.get("id"),style:this.fromOlStyle(e.getStyle()),geometry:{type:"GeometryCollection",geometries:n},projection:s})})),de(this,"reprojectCoordinatesToWGS84",((e,t)=>{let r=(0,O.reproject)(e,t,"EPSG:4326");return[r.x,r.y]})),de(this,"toOlFeature",(e=>l()(this.drawSource.getFeatures().filter((t=>t.get("id")===e.id))))),de(this,"fromOlStyle",(e=>e?{fillColor:this.rgbToHex(e.getFill().getColor()),fillTransparency:e.getFill().getColor()[3],strokeColor:e.getStroke().getColor(),strokeWidth:e.getStroke().getWidth(),text:e.getText().getText()}:{})),de(this,"toOlStyle",((e,t,r)=>{let o=e&&e.fillColor?e.fillColor:[255,255,255,.2];"string"==typeof o&&(o=this.hexToRgb(o).concat([e.fillOpacity>=0&&e.fillOpacity<=1?e.fillOpacity:1])),e&&e.fillTransparency&&(o[3]=e.fillTransparency);let s=e&&(e.strokeColor||e.color)?e.strokeColor||e.color:"#ffcc33";t&&(s="#4a90e2"),s=this.hexToRgb(s).concat([e&&e.opacity||1]);let i=new Q.default({fill:new Y.default({color:o}),stroke:new ee.default({color:s,width:e&&(e.strokeWidth||e.weight)?e.strokeWidth||e.weight:2}),text:new te.default({text:e&&e.text?e.text:"",fill:new Y.default({color:e&&(e.strokeColor||e.color)?e.strokeColor||e.color:"#000"}),stroke:new ee.default({color:"#fff",width:2}),font:e&&e.fontSize?e.fontSize+"px helvetica":""})});return"GeometryCollection"===r?[...(0,W.EC)({style:{iconGlyph:"comment",iconShape:"square",iconColor:"blue"}}),i]:e&&(e.iconUrl||e.iconGlyph)?(0,W.EC)({style:e}):i})),de(this,"hexToRgb",(e=>{const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(function(e,t,r,o){return t+t+r+r+o+o})));return t?[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]:null})),de(this,"componentToHex",(e=>{var t=e.toString(16);return 1===t.length?"0"+t:t})),de(this,"rgbToHex",(e=>"#"+this.componentToHex(e[0])+this.componentToHex(e[1])+this.componentToHex(e[2]))),de(this,"addModifyInteraction",(e=>{this.modifyInteraction&&this.props.map.removeInteraction(this.modifyInteraction);const t=e&&e.options&&e.options.editFilter;this.modifyFeatureColl=new oe.Z(G()(this.drawLayer.getSource().getFeatures(),t)),this.modifyInteraction=new ne.Z({features:this.modifyFeatureColl,condition:e=>(0,se.Xp)(e)&&!(0,se.Ko)(e)}),this.modifyInteraction.on("modifyend",(e=>{let t=e.features.getArray().map((e=>{let t=e.clone();if(t.getGeometry&&"GeometryCollection"===t.getGeometry().getType()&&t.getGeometry().setGeometries(this.replaceCirclesWithPolygons(t)),t.getGeometry&&t.getGeometry()&&"Circle"===t.getGeometry().getType()){let r=(0,O.reproject)(t.getGeometry().getCenter(),this.getMapCrs(),"EPSG:4326"),o=t.getGeometry().getRadius();t.setProperties({center:[r.x,r.y],radius:o}),e.setProperties({center:[r.x,r.y],radius:o}),t=this.replaceCircleWithPolygon(t.clone())}return(0,O.reprojectGeoJson)(he.writeFeatureObject(t),this.getMapCrs(),"EPSG:4326")}));this.props.options.transformToFeatureCollection?this.props.onDrawingFeatures(t):this.props.onGeometryChanged(t,this.props.drawOwner,!1,"editing","editing")})),this.props.map.addInteraction(this.modifyInteraction)})),de(this,"addTranslateInteraction",(()=>{this.translateInteraction&&this.props.map.removeInteraction(this.translateInteraction),this.translateInteraction=new ae.Z({features:new oe.Z(this.drawLayer.getSource().getFeatures())}),this.translateInteraction.setActive(!1),this.translateInteraction.on("translateend",(e=>{let t=e.features.getArray().map((e=>{let t=e.clone();if(t.getGeometry&&"GeometryCollection"===t.getGeometry().getType()&&t.getGeometry().setGeometries(this.replaceCirclesWithPolygons(t)),t.getGeometry&&t.getGeometry()&&"Circle"===t.getGeometry().getType()){let e=(0,O.reproject)(t.getGeometry().getCenter(),this.getMapCrs(),"EPSG:4326"),r=t.getGeometry().getRadius();t.setProperties({center:[e.x,e.y],radius:r}),t=this.replaceCircleWithPolygon(t)}return e.getProperties()&&e.getProperties().selected&&this.props.onSelectFeatures([(0,O.reprojectGeoJson)(he.writeFeatureObject(t),this.getMapCrs(),"EPSG:4326")]),(0,O.reprojectGeoJson)(he.writeFeatureObject(t),this.getMapCrs(),"EPSG:4326")}));this.props.options.transformToFeatureCollection?this.props.onDrawingFeatures(t):this.props.onGeometryChanged(t,this.props.drawOwner,this.props.drawOwner,!1,"Text"===this.props.drawMethod,"Circle"===this.props.drawMethod)})),this.addTranslateListener(),this.props.map.addInteraction(this.translateInteraction)})),de(this,"createOLGeometry",(e=>{let{type:t,coordinates:r,radius:o,center:s,geometries:i,projection:a,options:n={}}=e;return"GeometryCollection"===t?i&&i.length?new _.default(i.map((e=>this.olGeomFromType({type:e.type})))):new _.default([]):this.olGeomFromType({type:t,coordinates:r,radius:o,center:s,projection:a,options:n})})),de(this,"olGeomFromType",(e=>{let t,{type:r,coordinates:o,radius:s,center:i,projection:a,options:n}=e;switch(r){case"Point":case"Marker":case"Text":t=new X.Z(o||[]);break;case"LineString":t=new z.Z(o||[]);break;case"MultiPoint":t=new B.Z(o||[]);break;case"MultiLineString":t=new K.Z(o||[]);break;case"MultiPolygon":t=new U.Z(o||[]);break;default:{let e=m()(i)?{x:i[0],y:i[1]}:i;const r=a&&!isNaN(parseFloat(s))&&e&&!P()(e.x)&&!P()(e.y)&&!isNaN(parseFloat(e.x))&&!isNaN(parseFloat(e.y));t=r?n.geodesic?(0,H.iu)(this.reprojectCoordinatesToWGS84([e.x,e.y],a),s,100).clone().transform("EPSG:4326",a):(0,H.Bb)(new $.Z([e.x,e.y],s),100):new H.ZP(o&&m()(o[0])?o:[]),t&&r&&n.geodesic&&t.setProperties({geodesicCenter:[e.x,e.y]},!0)}}return t})),de(this,"convertGeometryTypeToStyleType",(e=>"BBOX"===e?"LineString":e)),de(this,"appendToMultiGeometry",((e,t,r)=>{switch(e){case"MultiPoint":t.appendPoint(r);break;case"MultiLineString":t.appendLineString(r);break;case"MultiPolygon":{let e=r.getCoordinates();e[0].push(e[0][0]),r.setCoordinates(e),t.appendPolygon(r);break}}})),de(this,"calculateRadius",((e,t)=>m()(t)&&m()(t[0])&&m()(t[0][0])?Math.sqrt(Math.pow(e[0]-t[0][0][0],2)+Math.pow(e[1]-t[0][0][1],2)):100)),de(this,"polygonFromCircle",(function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100;return(0,H.Bb)(new $.Z(e,t),r)})),de(this,"polygonCoordsFromCircle",(function(t,r){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100;return e.polygonFromCircle(t,r,o).getCoordinates()})),de(this,"replaceCirclesWithPolygonsInFeatureColl",(e=>e.map((e=>"Circle"!==e.getGeometry().getType()?e:this.replaceCircleWithPolygon(e))))),de(this,"replaceCircleWithPolygon",(e=>{if(e.getProperties().isCircle&&"Circle"===e.getGeometry().getType()){const t=e.getGeometry().getCenter(),r=e.getGeometry().getRadius();return e.setGeometry(this.polygonFromCircle(t,r)),e}return e})),de(this,"replaceCirclesWithPolygons",(e=>e.getGeometry&&!e.getGeometry().getGeometries?e:e.getGeometry().getGeometries().map(((t,r)=>{if("Circle"!==t.getType())return t;if(e.getProperties()&&e.getProperties().circles&&-1!==e.getProperties().circles.indexOf(r)){const e=t.getCenter(),r=t.getRadius();return this.polygonFromCircle(e,r)}return t})))),de(this,"replacePolygonsWithCircles",(e=>e.getGeometry().getGeometries().map(((t,r)=>{if("Polygon"!==t.getType())return t;if(e.getProperties()&&e.getProperties().circles&&-1!==e.getProperties().circles.indexOf(r)){const e=t.getExtent(),r=(0,pe.qg)(e),o=this.calculateRadius(r,t.getCoordinates());return new $.Z(r,o)}return t})))),de(this,"addTranslateListener",(()=>{document.addEventListener("keydown",(e=>{e.altKey&&"AltLeft"===e.code&&this.translateInteraction.setActive(!0)})),document.addEventListener("keyup",(e=>{"AltLeft"===e.code&&this.translateInteraction.setActive(!1)}))}))}UNSAFE_componentWillReceiveProps(e){if(this.drawLayer&&this.updateFeatureStyles(e.features),!e.drawStatus&&this.selectInteraction&&this.selectInteraction.getFeatures().clear(),this.props.drawStatus!==e.drawStatus||this.props.drawMethod!==e.drawMethod||this.props.features!==e.features)switch(e.drawStatus){case"create":this.addLayer(e);break;case"start":this.addInteractions(e);break;case"drawOrEdit":this.addDrawOrEditInteractions(e);break;case"stop":this.removeDrawInteraction();break;case"replace":this.replaceFeatures(e);break;case"updateStyle":this.updateOnlyFeatureStyles(e);break;case"clean":this.clean();break;case"cleanAndContinueDrawing":this.clean(!0);break;case"endDrawing":this.endDrawing(e);break;default:return}}render(){return null}}de(ue,"propTypes",{map:x().object,drawOwner:x().string,drawStatus:x().string,drawMethod:x().string,options:x().object,features:x().array,onChangeDrawingStatus:x().func,onGeometryChanged:x().func,onDrawStopped:x().func,onDrawingFeatures:x().func,onSelectFeatures:x().func,onEndDrawing:x().func,style:x().object}),de(ue,"defaultProps",{map:null,drawOwner:null,drawStatus:null,drawMethod:null,features:null,options:{stopAfterDrawing:!0},onChangeDrawingStatus:()=>{},onGeometryChanged:()=>{},onDrawStopped:()=>{},onDrawingFeatures:()=>{},onSelectFeatures:()=>{},onEndDrawing:()=>{}})},64250:(e,t,r)=>{"use strict";r.d(t,{a:()=>l});var o=r(1469),s=r.n(o),i=r(90183),a=r(21915),n=r(69669);const l=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t;if(!e.getGeometry()||"Polygon"!==e.getGeometry().getType()||e.getProperties().center&&0===e.getProperties().center.length)return e;if(e.getProperties()&&e.getProperties().isCircle&&e.getProperties().center&&e.getProperties().center[0]&&e.getProperties().center[1]){const o=e.getGeometry().getExtent();let l;e.getProperties().center?(l=(0,i.reproject)(e.getProperties().center,"EPSG:4326",t),l=[l.x,l.y]):l=(0,a.qg)(o);const c=e.getProperties().crs===t?e.getProperties().radius:((e,t,r,o)=>{if(s()(t)&&s()(t[0])&&s()(t[0][0])){const s=(0,i.reproject)(t[0][0],o,r);return Math.sqrt(Math.pow(e[0]-s.x,2)+Math.pow(e[1]-s.y,2))}return 100})(l,e.getGeometry().getCoordinates(),t,r);return e.setGeometry(new n.Z(l,c)),e}return e}}}]);